@model ChatApp.Core.Entities.Chat
@using System.Security.Claims

@{
    ViewBag.Title = "Chat: " + Model.Name;
    var currentUserId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}

<!-- External dependencies -->
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" asp-append-version="true" />
<link href="~/css/chat.css" rel="stylesheet" asp-append-version="true" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js" asp-append-version="true"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js" asp-append-version="true"></script>

<div class="container">
    <div class="content container-fluid bootstrap snippets bootdey">
        <div class="row row-broken">
            <div class="col-12 chat" style="overflow: hidden; outline: none;" tabindex="5001">
                <div class="col-inside-lg decor-default">
                    <div class="chat-body" id="chatBody">
                        <h6>Mini Chat</h6>
                        @foreach (var message in ViewBag.Messages ?? Enumerable.Empty<dynamic>())
                        {
                            <div class="answer @(message.SenderId == currentUserId ? "right" : "left")">
                                <div class="avatar">
                                    <img src="@(message.SenderId == currentUserId ? "https://bootdey.com/img/Content/avatar/avatar2.png" : "https://bootdey.com/img/Content/avatar/avatar1.png")" 
                                         alt="@message.Sender.DisplayName" onerror="this.src='/images/default-avatar.png'" />
                                </div>
                                <div class="name">@message.Sender.DisplayName</div>
                                <div class="text">@Html.Raw(System.Web.HttpUtility.HtmlEncode(message.MessageText))</div>
                                <div class="time">@message.Date.ToString("hh:mm tt")</div>
                            </div>
                        }
                    </div>
				</div>
			</div>
			<div class="answer-add mt-3 d-flex">
				<input id="messageInput" class="form-control" placeholder="Write a message" />
				<button id="sendMessageBtn" class="btn btn-primary ms-2" disabled>
					<i class="fa fa-paper-plane"></i>
				</button>
			</div>

        </div>
    </div>
</div>

<!-- Chat SignalR Logic -->
<script>
    const currentUserId = '@currentUserId';
    const chatId = '@Model.Id';

    function scrollToBottom() {
        const chatBody = document.getElementById("chatBody");
        if (chatBody) chatBody.scrollTop = chatBody.scrollHeight;
    }

    function escapeHtml(unsafe) {
        return unsafe?.replace(/&/g, '&amp;')
                      .replace(/</g, '&lt;')
                      .replace(/>/g, '&gt;')
                      .replace(/"/g, '&quot;')
                      .replace(/'/g, '&#39;') || '';
    }

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .withAutomaticReconnect()
        .build();

    connection.onclose(() => {
        const sendBtn = document.getElementById("sendMessageBtn");
        if (sendBtn) {
            sendBtn.disabled = true;
            sendBtn.textContent = "Reconnecting...";
        }
    });

    connection.onreconnected(() => {
        const sendBtn = document.getElementById("sendMessageBtn");
        if (sendBtn) {
            sendBtn.disabled = false;
            sendBtn.innerHTML = '<i class="fa fa-paper-plane"></i>';
            connection.invoke("JoinChat", chatId).catch(err => console.error("JoinChat failed:", err));
        }
    });

    connection.on("ReceiveMessage", function (chatIdFromHub, senderId, messageText, timestamp, displayName) {
        if (chatIdFromHub !== chatId) return;

        const isMine = senderId === currentUserId;
        const chatBody = document.getElementById("chatBody");
        if (chatBody) {
            const html = `
                <div class="answer ${isMine ? "right" : "left"}">
                    <div class="avatar">
                        <img src="${isMine ? "https://bootdey.com/img/Content/avatar/avatar2.png" : "https://bootdey.com/img/Content/avatar/avatar1.png"}" 
                             alt="${escapeHtml(displayName)}" onerror="this.src='/images/default-avatar.png'" />
                    </div>
                    <div class="name">${escapeHtml(displayName)}</div>
                    <div class="text">${escapeHtml(messageText)}</div>
                    <div class="time">${new Date(timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>
                </div>`;
            chatBody.insertAdjacentHTML("beforeend", html);
            scrollToBottom();
        }
    });

    connection.start().then(() => {
        console.log("SignalR connected.");
        const sendBtn = document.getElementById("sendMessageBtn");
        if (sendBtn) {
            sendBtn.disabled = false;
            sendBtn.innerHTML = '<i class="fa fa-paper-plane"></i>';
        }
        connection.invoke("JoinChat", chatId).catch(err => console.error("JoinChat failed:", err));
        scrollToBottom();
    }).catch(err => {
        console.error("SignalR connection failed:", err);
        const sendBtn = document.getElementById("sendMessageBtn");
        if (sendBtn) sendBtn.textContent = "Connection Failed";
    });

    function sendMessage() {
        const messageInput = document.getElementById("messageInput");
        const sendBtn = document.getElementById("sendMessageBtn");
        const messageText = messageInput.value.trim();
        if (!messageText) return;

        sendBtn.disabled = true;
        connection.invoke("SendMessage", chatId, messageText)
            .then(() => {
                messageInput.value = "";
                sendBtn.disabled = false;
                scrollToBottom();
            })
            .catch(err => {
                console.error("Send message failed:", err);
                sendBtn.disabled = false;
            });
    }

    document.getElementById("sendMessageBtn").addEventListener("click", sendMessage);
    document.getElementById("messageInput").addEventListener("keydown", function (e) {
        if (e.key === "Enter" && !e.shiftKey) {
            e.preventDefault();
            sendMessage();
        }
    });
</script>
    